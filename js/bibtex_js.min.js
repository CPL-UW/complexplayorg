function BibtexParser(){this.pos=0;this.input="";this.entries={};this.strings={JAN:"January",FEB:"February",MAR:"March",APR:"April",MAY:"May",JUN:"June",JUL:"July",AUG:"August",SEP:"September",OCT:"October",NOV:"November",DEC:"December"};this.currentEntry=this.currentKey="";this.setInput=function(a){this.input=a};this.getEntries=function(){return this.entries};this.isWhitespace=function(a){return" "==a||"\r"==a||"\t"==a||"\n"==a};this.match=function(a){this.skipWhitespace();if(this.input.substring(this.pos,
this.pos+a.length)==a)this.pos+=a.length;else throw"Token mismatch, expected "+a+", found "+this.input.substring(this.pos);this.skipWhitespace()};this.tryMatch=function(a){this.skipWhitespace();return this.input.substring(this.pos,this.pos+a.length)==a?!0:!1};this.skipWhitespace=function(){for(;this.isWhitespace(this.input[this.pos]);)this.pos++;if("%"==this.input[this.pos]){for(;"\n"!=this.input[this.pos];)this.pos++;this.skipWhitespace()}};this.value_braces=function(){var a=0;this.match("{");for(var b=
this.pos;;){if("}"==this.input[this.pos]&&"\\"!=this.input[this.pos-1])if(0<a)a--;else return a=this.pos,this.match("}"),this.input.substring(b,a);else if("{"==this.input[this.pos])a++;else if(this.pos==this.input.length-1)throw"Unterminated value";this.pos++}};this.value_quotes=function(){this.match('"');for(var a=this.pos;;){if('"'==this.input[this.pos]&&"\\"!=this.input[this.pos-1]){var b=this.pos;this.match('"');return this.input.substring(a,b)}if(this.pos==this.input.length-1)throw"Unterminated value:"+
this.input.substring(a);this.pos++}};this.single_value=function(){var a=this.pos;if(this.tryMatch("{"))return this.value_braces();if(this.tryMatch('"'))return this.value_quotes();var b=this.key();if(this.strings[b.toUpperCase()])return this.strings[b];if(b.match("^[0-9]+$"))return b;throw"Value expected:"+this.input.substring(a);};this.value=function(){var a=[];for(a.push(this.single_value());this.tryMatch("#");)this.match("#"),a.push(this.single_value());return a.join("")};this.key=function(){for(var a=
this.pos;;){if(this.pos==this.input.length)throw"Runaway key";if(this.input[this.pos].match("[a-zA-Z0-9_:\\./-]"))this.pos++;else return this.input.substring(a,this.pos).toUpperCase()}};this.key_equals_value=function(){var a=this.key();if(this.tryMatch("=")){this.match("=");var b=this.value();return[a,b]}throw"... = value expected, equals sign missing:"+this.input.substring(this.pos);};this.key_value_list=function(){var a=this.key_equals_value();for(this.entries[this.currentEntry][a[0]]=a[1];this.tryMatch(",");){this.match(",");
if(this.tryMatch("}"))break;a=this.key_equals_value();this.entries[this.currentEntry][a[0]]=a[1]}};this.entry_body=function(){this.currentEntry=this.key();this.entries[this.currentEntry]={};this.match(",");this.key_value_list()};this.directive=function(){this.match("@");return"@"+this.key()};this.string=function(){var a=this.key_equals_value();this.strings[a[0].toUpperCase()]=a[1]};this.preamble=function(){this.value()};this.comment=function(){this.value()};this.entry=function(){this.entry_body()};
this.bibtex=function(){for(;this.tryMatch("@");){var a=this.directive().toUpperCase();this.match("{");"@STRING"==a?this.string():"@PREAMBLE"==a?this.preamble():"@COMMENT"==a?this.comment():this.entry();this.match("}")}}}
function BibtexDisplay(){this.fixValue=function(a){a=a.replace(/\\glqq\s?/g,"&bdquo;");a=a.replace(/\\grqq\s?/g,"&rdquo;");a=a.replace(/\\ /g,"&nbsp;");a=a.replace(/\\url/g,"");a=a.replace(/---/g,"&mdash;");a=a.replace(/{\\"a}/g,"&auml;");a=a.replace(/\{\\"o\}/g,"&ouml;");a=a.replace(/{\\"u}/g,"&uuml;");a=a.replace(/{\\"A}/g,"&Auml;");a=a.replace(/{\\"O}/g,"&Ouml;");a=a.replace(/{\\"U}/g,"&Uuml;");a=a.replace(/\\ss/g,"&szlig;");return a=a.replace(/\{(.*?)\}/g,"$1")};this.displayBibtex2=function(a,
b){var c=new BibtexParser;c.setInput(a);c.bibtex();var c=c.getEntries(),k=b.find("*"),j;for(j in c){var f=$(".bibtex_template").clone().removeClass("bibtex_template");f.addClass("unused");for(var g in c[j])for(var h=f.find("."+g.toLowerCase()),a=0;a<h.size();a++){var d=$(h[a]);d.removeClass("unused");var e=this.fixValue(c[j][g]);if(d.is("a"))d.attr("href",e);else{var i=d.html()||"";i.match("%")?d.html(i.replace("%",e)):d.html(e)}}f.find("span .unused").each(function(a,b){b.innerHTML.match("%")&&(b.innerHTML=
"")});b.append(f);f.show()}k.remove()};this.displayBibtex=function(a,b){var c=new BibtexParser;c.setInput(a);c.bibtex();var k=b.find("*"),c=c.getEntries(),j;for(j in c){var f=c[j],g=$(".bibtex_template").clone().removeClass("bibtex_template"),h=[],d;for(d in f)h.push(d.toUpperCase());do{var e=g.find(".if");if(0==e.size())break;var i=e.first();i.removeClass("if");var l=!0,e=i.attr("class").split(" ");$.each(e,function(a,b){0>h.indexOf(b.toUpperCase())&&(l=!1);i.removeClass(b)});l||i.remove()}while(1);
for(var m in h)d=h[m],e=f[d]||"",g.find("span:not(a)."+d.toLowerCase()).html(this.fixValue(e)),g.find("a."+d.toLowerCase()).attr("href",this.fixValue(e));b.append(g);g.show()}k.remove()}}function bibtex_js_draw(){$(".bibtex_template").hide();(new BibtexDisplay).displayBibtex($("#bibtex_input").val(),$("#bibtex_display"))}"undefined"==typeof jQuery?alert("Please include jquery in all pages using bibtex_js!"):$(document).ready(function(){0==$(".bibtex_template").size()&&$("body").append('<div class="bibtex_template"><div class="if author" style="font-weight: bold;">\n  <span class="if year">\n    <span class="year"></span>, \n  </span>\n  <span class="author"></span>\n  <span class="if url" style="margin-left: 20px">\n    <a class="url" style="color:black; font-size:10px">(view online)</a>\n  </span>\n</div>\n<div style="margin-left: 10px; margin-bottom:5px;">\n  <span class="title"></span>\n</div></div>')});
